name: CI/CD Pipeline
run-name: ${{ github.actor }} is testing out GitHub Actions

on:
  push:
    branches:
      - Karami

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Print trigger information
        run: |
          echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
          echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Create deployment artifact
        run: tar -czf "${{ github.sha }}.tar.gz" --exclude=*.git --exclude=node_modules *

      - name: Store artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

      - name: Debug Deployment Config
        run: cat ./deployment-config.json

      - name: Export Deployment matrix
        id: export-deployment-matrix
        run: |
          JSON=$(cat ./deployment-config.json)
          echo "Deployment JSON: $JSON"
          echo "::set-output name=deployment-matrix::$JSON"
        shell: bash

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run unit tests
        run: dotnet test --no-restore --configuration Release --filter TestCategory=Unit

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run integration tests
        run: dotnet test --no-restore --configuration Release --filter TestCategory=Integration

  prepare-release-on-server:
    name: Prepare Release on AWS Server
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: .

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          key: ${{ secrets.fifthkey }}
          application_name: Team002TechCO
          environment_name: Team002TechCO-env
          existing_bucket_name: elasticbeanstalk-us-east-1-992382535730
          region: us-east-1
          version_label: ${{ github.sha }} # This will generate an auto version label (number).
          deployment_package: deploy.zip