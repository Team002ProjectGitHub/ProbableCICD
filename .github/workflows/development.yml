on:
  push:
    branches:
      - joel

jobs:
  create-deployment-artifacts:
    name: Create Deployment Artifacts
    runs-on: ubuntu-latest
    outputs:
      deployment_matrix: ${{ steps.export_deployment_matrix.outputs.deployment_matrix }}
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Build .NET Project
        run: dotnet build
      - name: List Overall Files
        run: ls
      - name: Create Deployment Artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}.tar.gz" --exclude=*.git --exclude=node_modules *
      - name: Store Artifact for Deployment
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz
      - name: Export Deployment Matrix
        id: export_deployment_matrix
        run: |
          JSON="$(cat ./deployment-config.json)"
          JSON="${JSON//'%'/'%25'}"
          JSON="${JSON//$'\n'/'%0A'}"
          JSON="${JSON//$'\r'/'%0D'}"
          echo "::set-output name=deployment_matrix::$JSON"

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x' # Specify your .NET version
      - name: Restore Dependencies
        run: dotnet restore
      - name: Run Unit Tests
        run: dotnet test --no-restore --configuration Release --filter TestCategory=Unit

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x' # Specify your .NET version
      - name: Restore Dependencies
        run: dotnet restore
      - name: Run Integration Tests
        run: dotnet test --no-restore --configuration Release --filter TestCategory=Integration

  prepare-release-on-server:
    name: Prepare Release on Server
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, ]
    strategy:
      matrix:
        server: ${{ fromJson(needs.create-deployment-artifacts.outputs.deployment_matrix).servers }}
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: app-build
      - name: Upload
        uses: nogsantos/scp-deploy@master
        with:
          src: ${{ github.sha }}.tar.gz
          host: ${{ matrix.server.ip }}
          remote: /var/www/html
          user: ${{ matrix.server.username }}
          key: ${{ secrets.fifthkey }}
          port: ${{ matrix.server.port }}